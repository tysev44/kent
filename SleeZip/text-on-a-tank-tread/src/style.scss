@use "sass:math";

* {
	border: 0;
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}
:root {
	--hue: 223;
	--bg: hsl(var(--hue), 90%, 50%);
	--front: hsl(var(--hue), 90%, 95%);
	--back: hsl(var(--hue), 90%, 5%);
	--trans-dur: 0.3s;
	font-size: clamp(1rem, 0.9rem + 0.5vw, 1.5rem);
}
body {
	background-color: var(--bg);
	color: var(--back);
	display: grid;
	place-items: center;
	font: 1em/1.5 -apple-system, BlinkMacSystemFont, "Helvetica Neue", Helvetica, sans-serif;
	height: 100vh;
}
.tot {
	position: relative;
	width: 20em;
	height: 20em;

	&__layer,
	&__tread {
		position: absolute;
		top: 50%;
		left: 50%;
	}
	&__layer {
		color: transparent;
		direction: ltr;
		font: {
			size: 3em;
			weight: 900;
		};
		line-height: 1;
		transform: translate(-50%, -50%) rotateX(45deg) rotateZ(45deg);
		transform-style: preserve-3d;
	}
	&__tread {
		animation: {
			name: letter-tread-back;
			timing-function: linear;
			iteration-count: infinite;
		};
		backface-visibility: hidden;
		color: var(--back);
		overflow: hidden;
		height: 100%;
		transform: translate(-50%, -50%);
		transition: color var(--trans-dur);

		&-window {
			&:before {
				content: attr(data-text);
				display: block;
				white-space: nowrap;
				transform: rotateY(180deg);
			}
		}
	}
	&__layer:last-child &__tread {
		animation-name: letter-tread-front;
		color: var(--front);

		&-window {
			&:before {
				transform: rotateY(0);
			}
		}
	}
}

/* Animations */
$treadHalf: 8rem;
$treadRadius: 2rem;
$treadCircle: 2 * math.$pi * $treadRadius;
$treadLength: $treadHalf * 4 + $treadCircle;
@debug $treadLength;

@keyframes letter-tread-back {
	from {
		transform: translate(-50%, -50%) translateX(0) rotateY(0) translateZ(-$treadRadius);
	}
	#{($treadHalf / $treadLength) * 100%} {
		transform: translate(-50%, -50%) translateX($treadHalf) rotateY(0) translateZ(-$treadRadius);
	}
	#{(($treadHalf + $treadCircle * 0.5) / $treadLength) * 100%} {
		transform: translate(-50%, -50%) translateX($treadHalf) rotateY(-180deg) translateZ(-$treadRadius);
	}
	#{(($treadHalf * 2 + $treadCircle * 0.5) / $treadLength) * 100%} {
		transform: translate(-50%, -50%) translateX(0) rotateY(-180deg) translateZ(-$treadRadius);
	}
	#{(($treadHalf * 3 + $treadCircle * 0.5) / $treadLength) * 100%} {
		transform: translate(-50%, -50%) translateX(-$treadHalf) rotateY(-180deg) translateZ(-$treadRadius);
	}
	#{(($treadHalf * 3 + $treadCircle) / $treadLength) * 100%} {
		transform: translate(-50%, -50%) translateX(-$treadHalf) rotateY(-360deg) translateZ(-$treadRadius);
	}
	to {
		transform: translate(-50%, -50%) translateX(0) rotateY(-360deg) translateZ(-$treadRadius);
	}
}
@keyframes letter-tread-front {
	from {
		transform: translate(-50%, -50%) translateX(0) rotateY(0) translateZ($treadRadius);
	}
	#{($treadHalf / $treadLength) * 100%} {
		transform: translate(-50%, -50%) translateX(-$treadHalf) rotateY(0) translateZ($treadRadius);
	}
	#{(($treadHalf + $treadCircle * 0.5) / $treadLength) * 100%} {
		transform: translate(-50%, -50%) translateX(-$treadHalf) rotateY(-180deg) translateZ($treadRadius);
	}
	#{(($treadHalf * 2 + $treadCircle * 0.5) / $treadLength) * 100%} {
		transform: translate(-50%, -50%) translateX(0) rotateY(-180deg) translateZ($treadRadius);
	}
	#{(($treadHalf * 3 + $treadCircle * 0.5) / $treadLength) * 100%} {
		transform: translate(-50%, -50%) translateX($treadHalf) rotateY(-180deg) translateZ($treadRadius);
	}
	#{(($treadHalf * 3 + $treadCircle) / $treadLength) * 100%} {
		transform: translate(-50%, -50%) translateX($treadHalf) rotateY(-360deg) translateZ($treadRadius);
	}
	to {
		transform: translate(-50%, -50%) translateX(0) rotateY(-360deg) translateZ($treadRadius);
	}
}